clc;
circular=10000;
E=1;
information=randi([0 1],1,8);
L=length(information);
Eb=E/L;
Nc=2^L;
Mc=log2(L);

for circular = 1:1:10000
   for SNR=-20:1:-8
       %% Transmitter %%
        No=Eb/(10^(SNR/10)); 
       % A sequence---Random digital signal generated by spectrum sensing 
        a=Random_dightal(2^L); 
        nosise=No*randn(size(a));
        A=a+nosise;
       % PR sequence---Poly phase 
        M=M_sequence_generator(information);  %% M sequence---Random sequency set by M sequence generator
        m=Mk_sequence(L,M);
        PR_vector=exp(1j*m);  %% Poly phase vector
       % Spectral vector and IFFT 
        B=A.*PR_vector;
        b=ifft(B)/sqrt(Nc);
       % CCSK
       S=Binaray_to_Dec(L,information);
       X=CCSK(S,Nc,L,A,m); 
       stairs(X);
       %% Receiver %%
       %FFT and Conjugating
       r=fft(X);
       y=ifft(r.*(conj(B)));
       
   end
     
end

